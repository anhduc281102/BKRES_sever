{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AD\\\\Desktop\\\\GIS\\\\gis\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios'; // Import axios để gọi API\nimport '../styles/Main.css';\nimport iconUrl from '../assets/marker-icon.png'; // Đường dẫn đến icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const mapContainer = useRef(null);\n  const [gateways, setGateways] = useState([]);\n  useEffect(() => {\n    // Gọi API từ backend để lấy thông tin các trạm\n    axios.post('http://sanslab.viewdns.net:5000/api/gateway/getallGateway').then(response => {\n      if (response.data.success) {\n        const gatewaysData = response.data.data.gateways;\n        setGateways(gatewaysData);\n      } else {\n        console.error('Lỗi khi lấy dữ liệu từ API');\n      }\n    }).catch(error => {\n      console.error('Lỗi khi gọi API:', error);\n    });\n  }, []);\n  useEffect(() => {\n    if (!mapContainer.current || gateways.length === 0) return;\n\n    // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\n    const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\n\n    // Sử dụng bản đồ OpenStreetMap làm nền\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Tạo icon tùy chỉnh\n    const customIcon = L.icon({\n      iconUrl: iconUrl,\n      // Đường dẫn đến icon\n      iconSize: [25, 41],\n      // Kích thước của icon\n      iconAnchor: [12, 41],\n      // Vị trí chính xác của icon, thường là phía dưới cùng giữa\n      popupAnchor: [0, -41] // Vị trí hiển thị pop-up, thường là phía trên cùng giữa\n    });\n\n    // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\n    gateways.forEach(gateway => {\n      const {\n        lat,\n        lon\n      } = gateway.location[0]; // Lấy tọa độ lat và lon của trạm\n      L.marker([parseFloat(lat), parseFloat(lon)], {\n        icon: customIcon\n      }).addTo(map).bindPopup(`<b>${gateway.gateway_name}</b>`); // Thêm pop-up cho từng điểm trạm\n    });\n  }, [mapContainer, gateways]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    id: \"map\",\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_s(Main, \"+avr+c+oWpqCknF2KWO9XWVirig=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","axios","iconUrl","jsxDEV","_jsxDEV","Main","_s","mapContainer","gateways","setGateways","post","then","response","data","success","gatewaysData","console","error","catch","current","length","map","setView","tileLayer","attribution","addTo","customIcon","icon","iconSize","iconAnchor","popupAnchor","forEach","gateway","lat","lon","location","marker","parseFloat","bindPopup","gateway_name","ref","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AD/Desktop/GIS/gis/src/components/Main.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport L from 'leaflet'; \r\nimport 'leaflet/dist/leaflet.css'; \r\nimport axios from 'axios'; // Import axios để gọi API\r\nimport '../styles/Main.css';\r\nimport iconUrl from '../assets/marker-icon.png'; // Đường dẫn đến icon\r\n\r\nfunction Main() {\r\n    const mapContainer = useRef(null);\r\n    const [gateways, setGateways] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Gọi API từ backend để lấy thông tin các trạm\r\n        axios.post('http://sanslab.viewdns.net:5000/api/gateway/getallGateway')\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    const gatewaysData = response.data.data.gateways;\r\n                    setGateways(gatewaysData);\r\n                } else {\r\n                    console.error('Lỗi khi lấy dữ liệu từ API');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Lỗi khi gọi API:', error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!mapContainer.current || gateways.length === 0) return;\r\n\r\n        // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\r\n        const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\r\n\r\n        // Sử dụng bản đồ OpenStreetMap làm nền\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(map);\r\n\r\n        // Tạo icon tùy chỉnh\r\n        const customIcon = L.icon({\r\n            iconUrl: iconUrl, // Đường dẫn đến icon\r\n            iconSize: [25, 41], // Kích thước của icon\r\n            iconAnchor: [12, 41], // Vị trí chính xác của icon, thường là phía dưới cùng giữa\r\n            popupAnchor: [0, -41] // Vị trí hiển thị pop-up, thường là phía trên cùng giữa\r\n        });\r\n\r\n        // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\r\n        gateways.forEach(gateway => {\r\n            const { lat, lon } = gateway.location[0]; // Lấy tọa độ lat và lon của trạm\r\n            L.marker([parseFloat(lat), parseFloat(lon)], { icon: customIcon })\r\n                .addTo(map)\r\n                .bindPopup(`<b>${gateway.gateway_name}</b>`); // Thêm pop-up cho từng điểm trạm\r\n        });\r\n    }, [mapContainer, gateways]);\r\n\r\n    return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}