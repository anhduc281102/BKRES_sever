{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AD\\\\Desktop\\\\GIS\\\\gis\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react';\n// import L from 'leaflet'; \n// import 'leaflet/dist/leaflet.css'; \n// import axios from 'axios';\n// import '../styles/Main.css';\n// import iconUrl from '../assets/marker-icon.png';\n\n// function Main() {\n//     const mapContainer = useRef(null);\n//     const [gateways, setGateways] = useState([]);\n//     const [token, setToken] = useState('');\n\n//     useEffect(() => {\n//         // Lấy token từ localStorage\n//         const storedToken = localStorage.getItem('Token');\n//         if (storedToken) {\n//             setToken(storedToken);\n//         }\n//     }, []);\n\n//     useEffect(() => {\n//         if (!mapContainer.current || gateways.length === 0) return;\n\n//         // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\n//         const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\n\n//         // Sử dụng bản đồ OpenStreetMap làm nền\n//         L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//             attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//         }).addTo(map);\n\n//         // Tạo icon tùy chỉnh\n//         const customIcon = L.icon({\n//             iconUrl: iconUrl,\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [0, -41]\n//         });\n\n//         // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\n//         gateways.forEach(gateway => {\n//             const { lat, lon } = gateway.location[0];\n//             L.marker([parseFloat(lat), parseFloat(lon)], { icon: customIcon })\n//                 .addTo(map)\n//                 .bindPopup(`<b>${gateway.gateway_name}</b>`);\n//         });\n//     }, [mapContainer, gateways]);\n\n//     useEffect(() => {\n//         // Gọi API từ backend để lấy thông tin các trạm, sử dụng token\n//         axios.post('http://sanslab.viewdns.net:5000/api/gateway/getallGateway', null, {\n//     headers:   \n//         {'authorization': `Bearer ${token}` // Thêm token vào header Authorization\n// }\n//         })\n//             .then(response => {\n//                 if (response.data.success) {\n//                     const gatewaysData = response.data.data.gateways;\n//                     setGateways(gatewaysData);\n//                 } else {\n//                     console.error('Lỗi khi lấy dữ liệu từ API');\n//                 }\n//             })\n//             .catch(error => {\n//                 console.error('Lỗi khi gọi API:', error);\n//             });\n//     }, [token]);\n\n//     return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\n// }\n\n// export default Main;\n\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/Main.css';\nimport iconUrl from '../assets/marker-icon.png'; // Đường dẫn đến icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const mapContainer = useRef(null);\n  useEffect(() => {\n    if (!mapContainer.current || mapContainer.current.children.length === 0) {\n      // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\n      const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\n\n      // Sử dụng bản đồ OpenStreetMap làm nền\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // Tạo icon tùy chỉnh\n      const customIcon = L.icon({\n        iconUrl: iconUrl,\n        // Đường dẫn đến icon\n        iconSize: [25, 41],\n        // Kích thước của icon\n        iconAnchor: [12, 41],\n        // Vị trí chính xác của icon, thường là phía dưới cùng giữa\n        popupAnchor: [0, -41] // Vị trí hiển thị pop-up, thường là phía trên cùng giữa\n      });\n\n      // Dữ liệu tọa độ của các trạm thu thập dữ liệu (ví dụ)\n      const stations = [{\n        name: 'Station 1',\n        location: [21.0285, 105.8542]\n      }, {\n        name: 'Station 2',\n        location: [10.762622, 106.660172]\n      }, {\n        name: 'Station 3',\n        location: [16.0544, 108.2022]\n      }\n      // Thêm các trạm khác vào đây\n      ];\n\n      // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\n      stations.forEach(station => {\n        L.marker(station.location, {\n          icon: customIcon\n        }).addTo(map).bindPopup(`<b>${station.name}</b>`); // Thêm pop-up cho từng điểm trạm\n      });\n    }\n  }, [mapContainer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    id: \"map\",\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 12\n  }, this);\n}\n_s(Main, \"6zcGo6SVCAaKoYrOkDL9zc4/xh8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useRef","L","iconUrl","jsxDEV","_jsxDEV","Main","_s","mapContainer","current","children","length","map","setView","tileLayer","attribution","addTo","customIcon","icon","iconSize","iconAnchor","popupAnchor","stations","name","location","forEach","station","marker","bindPopup","ref","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AD/Desktop/GIS/gis/src/components/Main.jsx"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react';\r\n// import L from 'leaflet'; \r\n// import 'leaflet/dist/leaflet.css'; \r\n// import axios from 'axios';\r\n// import '../styles/Main.css';\r\n// import iconUrl from '../assets/marker-icon.png';\r\n\r\n// function Main() {\r\n//     const mapContainer = useRef(null);\r\n//     const [gateways, setGateways] = useState([]);\r\n//     const [token, setToken] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         // Lấy token từ localStorage\r\n//         const storedToken = localStorage.getItem('Token');\r\n//         if (storedToken) {\r\n//             setToken(storedToken);\r\n//         }\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (!mapContainer.current || gateways.length === 0) return;\r\n\r\n//         // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\r\n//         const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\r\n\r\n//         // Sử dụng bản đồ OpenStreetMap làm nền\r\n//         L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n//             attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n//         }).addTo(map);\r\n\r\n//         // Tạo icon tùy chỉnh\r\n//         const customIcon = L.icon({\r\n//             iconUrl: iconUrl,\r\n//             iconSize: [25, 41],\r\n//             iconAnchor: [12, 41],\r\n//             popupAnchor: [0, -41]\r\n//         });\r\n\r\n//         // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\r\n//         gateways.forEach(gateway => {\r\n//             const { lat, lon } = gateway.location[0];\r\n//             L.marker([parseFloat(lat), parseFloat(lon)], { icon: customIcon })\r\n//                 .addTo(map)\r\n//                 .bindPopup(`<b>${gateway.gateway_name}</b>`);\r\n//         });\r\n//     }, [mapContainer, gateways]);\r\n\r\n//     useEffect(() => {\r\n//         // Gọi API từ backend để lấy thông tin các trạm, sử dụng token\r\n//         axios.post('http://sanslab.viewdns.net:5000/api/gateway/getallGateway', null, {\r\n//     headers:   \r\n//         {'authorization': `Bearer ${token}` // Thêm token vào header Authorization\r\n// }\r\n//         })\r\n//             .then(response => {\r\n//                 if (response.data.success) {\r\n//                     const gatewaysData = response.data.data.gateways;\r\n//                     setGateways(gatewaysData);\r\n//                 } else {\r\n//                     console.error('Lỗi khi lấy dữ liệu từ API');\r\n//                 }\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error('Lỗi khi gọi API:', error);\r\n//             });\r\n//     }, [token]);\r\n\r\n//     return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\r\n// }\r\n\r\n// export default Main;\r\n\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet'; \r\nimport 'leaflet/dist/leaflet.css'; \r\nimport '../styles/Main.css';\r\nimport iconUrl from '../assets/marker-icon.png'; // Đường dẫn đến icon\r\n\r\nfunction Main() {\r\n    const mapContainer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!mapContainer.current || mapContainer.current.children.length === 0) {\r\n            // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\r\n            const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\r\n\r\n            // Sử dụng bản đồ OpenStreetMap làm nền\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            }).addTo(map);\r\n\r\n            // Tạo icon tùy chỉnh\r\n            const customIcon = L.icon({\r\n                iconUrl: iconUrl, // Đường dẫn đến icon\r\n                iconSize: [25, 41], // Kích thước của icon\r\n                iconAnchor: [12, 41], // Vị trí chính xác của icon, thường là phía dưới cùng giữa\r\n                popupAnchor: [0, -41] // Vị trí hiển thị pop-up, thường là phía trên cùng giữa\r\n            });\r\n\r\n            // Dữ liệu tọa độ của các trạm thu thập dữ liệu (ví dụ)\r\n            const stations = [\r\n                { name: 'Station 1', location: [21.0285, 105.8542] },\r\n                { name: 'Station 2', location: [10.762622, 106.660172] },\r\n                { name: 'Station 3', location: [16.0544, 108.2022] }\r\n                // Thêm các trạm khác vào đây\r\n            ];\r\n\r\n            // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\r\n            stations.forEach(station => {\r\n                L.marker(station.location, { icon: customIcon }).addTo(map).bindPopup(`<b>${station.name}</b>`); // Thêm pop-up cho từng điểm trạm\r\n            });\r\n        }\r\n    }, [mapContainer]);\r\n\r\n    return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,oBAAoB;AAC3B,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,YAAY,CAACC,OAAO,IAAID,YAAY,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MACrE;MACA,MAAMC,GAAG,GAAGV,CAAC,CAACU,GAAG,CAACJ,YAAY,CAACC,OAAO,CAAC,CAACI,OAAO,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;;MAEvE;MACAX,CAAC,CAACY,SAAS,CAAC,oDAAoD,EAAE;QAC9DC,WAAW,EAAE;MACjB,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;;MAEb;MACA,MAAMK,UAAU,GAAGf,CAAC,CAACgB,IAAI,CAAC;QACtBf,OAAO,EAAEA,OAAO;QAAE;QAClBgB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACpBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAE;QACtBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1B,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,CACb;QAAEC,IAAI,EAAE,WAAW;QAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ;MAAE,CAAC,EACpD;QAAED,IAAI,EAAE,WAAW;QAAEC,QAAQ,EAAE,CAAC,SAAS,EAAE,UAAU;MAAE,CAAC,EACxD;QAAED,IAAI,EAAE,WAAW;QAAEC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ;MAAE;MACnD;MAAA,CACH;;MAED;MACAF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QACxBxB,CAAC,CAACyB,MAAM,CAACD,OAAO,CAACF,QAAQ,EAAE;UAAEN,IAAI,EAAED;QAAW,CAAC,CAAC,CAACD,KAAK,CAACJ,GAAG,CAAC,CAACgB,SAAS,CAAE,MAAKF,OAAO,CAACH,IAAK,MAAK,CAAC,CAAC,CAAC;MACrG,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAElB,oBAAOH,OAAA;IAAKwB,GAAG,EAAErB,YAAa;IAACsB,EAAE,EAAC,KAAK;IAACC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5E;AAAC5B,EAAA,CArCQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}