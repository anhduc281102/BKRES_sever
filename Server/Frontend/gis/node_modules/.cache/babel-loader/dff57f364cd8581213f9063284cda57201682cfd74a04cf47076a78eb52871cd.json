{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AD\\\\Desktop\\\\GIS\\\\gis\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef } from 'react';\n// import L from 'leaflet'; \n// import 'leaflet/dist/leaflet.css'; \n// import '../styles/Main.css';\n// import mainStationIconUrl from '../assets/gateway_icon.png'; // Đường dẫn đến icon của trạm chính\n// import subStationIconUrl from '../assets/device_icon.png'; // Đường dẫn đến icon của trạm con\n\n// function Main() {\n//     const mapContainer = useRef(null);\n//     const mainStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm chính\n//     const subStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm con\n\n//     useEffect(() => {\n//         if (!mapContainer.current || mapContainer.current.children.length === 0) {\n//             // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\n//             const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\n\n//             // Sử dụng bản đồ OpenStreetMap làm nền\n//             L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//                 attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//             }).addTo(map);\n\n//             // Tạo icon cho trạm chính\n//             const mainStationIcon = L.icon({\n//                 iconUrl: mainStationIconUrl,\n//                 iconSize: [25, 41],\n//                 iconAnchor: [12, 41],\n//                 popupAnchor: [0, -41]\n//             });\n\n//             // Tạo icon cho trạm con\n//             const subStationIcon = L.icon({\n//                 iconUrl: subStationIconUrl,\n//                 iconSize: [25, 41],\n//                 iconAnchor: [12, 41],\n//                 popupAnchor: [0, -41]\n//             });\n\n//             // Dữ liệu tọa độ của các trạm thu thập dữ liệu (ví dụ)\n//             const stations = [\n//                 { name: 'Station 1', location: [21.0285, 105.8542], children: [[21.02, 105.85], [21.03, 105.85], [21.04, 105.85]] },\n//                 { name: 'Station 2', location: [10.762622, 106.660172], children: [[10.76, 106.66], [10.77, 106.66], [10.78, 106.66]] },\n//                 { name: 'Station 3', location: [16.0544, 108.2022], children: [[16.05, 108.20], [16.06, 108.20], [16.07, 108.20]] }\n//                 // Thêm các trạm khác vào đây\n//             ];\n\n//             // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\n//             stations.forEach(station => {\n//                 const mainStationMarker = L.marker(station.location, { icon: mainStationIcon }).addTo(map).bindPopup(`<b>${station.name}</b>`); \n//                 mainStationMarkers.current.push(mainStationMarker); \n\n//                 // Sự kiện click trên marker của trạm chính\n//                 mainStationMarker.on('click', () => {\n//                     // Zoom vào vị trí của marker trạm chính\n//                     map.setView(station.location, 14.5);\n\n//                     // Xóa các marker của trạm con hiện tại\n//                     subStationMarkers.current.forEach(marker => map.removeLayer(marker));\n//                     subStationMarkers.current = [];\n\n//                     // Hiển thị vị trí của các node con với icon trạm con\n//                     station.children.forEach(child => {\n//                         const subStationMarker = L.marker(child, { icon: subStationIcon }).addTo(map); // Thêm marker cho node con với icon trạm con\n//                         subStationMarkers.current.push(subStationMarker); // Thêm marker của trạm con vào danh sách\n//                     });\n//                 });\n//             });\n\n//             // Sự kiện zoomend để xóa các marker của trạm con khi zoom < 7\n//             map.on('zoomend', function() {\n//                 const zoom = map.getZoom();\n//                 if (zoom > 9) {\n//                     subStationMarkers.current.forEach(marker => map.removeLayer(marker));\n//                     subStationMarkers.current = [];\n//                 }\n//             });\n//         }\n//     }, [mapContainer]);\n\n//     return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\n// }\n\n// export default Main;\n\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport mainStationIconUrl from '../assets/gateway_icon.png'; // Đường dẫn đến icon của trạm chính\nimport subStationIconUrl from '../assets/device_icon.png'; // Đường dẫn đến icon của trạm con\nimport axios from 'axios'; // Import thư viện Axios để gửi yêu cầu HTTP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const mapContainer = useRef(null);\n  const mainStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm chính\n  const subStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm con\n\n  useEffect(() => {\n    const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    const mainStationIcon = L.icon({\n      iconUrl: mainStationIconUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [0, -41]\n    });\n    const subStationIcon = L.icon({\n      iconUrl: subStationIconUrl,\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [0, -41]\n    });\n\n    // Gửi yêu cầu HTTP GET để lấy dữ liệu từ API backend\n    axios.get('http://sanslab.ddns.net:5000/api/gateway/getallGateway').then(response => {\n      const {\n        data\n      } = response;\n      const gateways = data.data.gateways;\n      gateways.forEach(gateway => {\n        const {\n          location,\n          children\n        } = gateway;\n        const mainStationMarker = L.marker([location[0].lat, location[0].lon], {\n          icon: mainStationIcon\n        }).addTo(map).bindPopup(`<b>${gateway.gateway_name}</b>`);\n        mainStationMarkers.current.push(mainStationMarker);\n        mainStationMarker.on('click', () => {\n          map.setView([location[0].lat, location[0].lon], 14.5);\n          subStationMarkers.current.forEach(marker => map.removeLayer(marker));\n          subStationMarkers.current = [];\n          children.forEach(child => {\n            const subStationMarker = L.marker([child.lat, child.lon], {\n              icon: subStationIcon\n            }).addTo(map);\n            subStationMarkers.current.push(subStationMarker);\n          });\n        });\n      });\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n    map.on('zoomend', function () {\n      const zoom = map.getZoom();\n      if (zoom > 9) {\n        subStationMarkers.current.forEach(marker => map.removeLayer(marker));\n        subStationMarkers.current = [];\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    id: \"map\",\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 12\n  }, this);\n}\n_s(Main, \"P7zcmBi2J6arWf8WtVxvFnDGAV8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useRef","L","mainStationIconUrl","subStationIconUrl","axios","jsxDEV","_jsxDEV","Main","_s","mapContainer","mainStationMarkers","subStationMarkers","map","current","setView","tileLayer","attribution","addTo","mainStationIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","subStationIcon","get","then","response","data","gateways","forEach","gateway","location","children","mainStationMarker","marker","lat","lon","bindPopup","gateway_name","push","on","removeLayer","child","subStationMarker","catch","error","console","zoom","getZoom","ref","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AD/Desktop/GIS/gis/src/components/Main.jsx"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\r\n// import L from 'leaflet'; \r\n// import 'leaflet/dist/leaflet.css'; \r\n// import '../styles/Main.css';\r\n// import mainStationIconUrl from '../assets/gateway_icon.png'; // Đường dẫn đến icon của trạm chính\r\n// import subStationIconUrl from '../assets/device_icon.png'; // Đường dẫn đến icon của trạm con\r\n\r\n// function Main() {\r\n//     const mapContainer = useRef(null);\r\n//     const mainStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm chính\r\n//     const subStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm con\r\n\r\n//     useEffect(() => {\r\n//         if (!mapContainer.current || mapContainer.current.children.length === 0) {\r\n//             // Khởi tạo bản đồ và đặt tọa độ trung tâm ở Việt Nam\r\n//             const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\r\n\r\n//             // Sử dụng bản đồ OpenStreetMap làm nền\r\n//             L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n//                 attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n//             }).addTo(map);\r\n\r\n//             // Tạo icon cho trạm chính\r\n//             const mainStationIcon = L.icon({\r\n//                 iconUrl: mainStationIconUrl,\r\n//                 iconSize: [25, 41],\r\n//                 iconAnchor: [12, 41],\r\n//                 popupAnchor: [0, -41]\r\n//             });\r\n\r\n//             // Tạo icon cho trạm con\r\n//             const subStationIcon = L.icon({\r\n//                 iconUrl: subStationIconUrl,\r\n//                 iconSize: [25, 41],\r\n//                 iconAnchor: [12, 41],\r\n//                 popupAnchor: [0, -41]\r\n//             });\r\n\r\n//             // Dữ liệu tọa độ của các trạm thu thập dữ liệu (ví dụ)\r\n//             const stations = [\r\n//                 { name: 'Station 1', location: [21.0285, 105.8542], children: [[21.02, 105.85], [21.03, 105.85], [21.04, 105.85]] },\r\n//                 { name: 'Station 2', location: [10.762622, 106.660172], children: [[10.76, 106.66], [10.77, 106.66], [10.78, 106.66]] },\r\n//                 { name: 'Station 3', location: [16.0544, 108.2022], children: [[16.05, 108.20], [16.06, 108.20], [16.07, 108.20]] }\r\n//                 // Thêm các trạm khác vào đây\r\n//             ];\r\n\r\n//             // Đánh dấu các điểm trạm trên bản đồ với icon tùy chỉnh\r\n//             stations.forEach(station => {\r\n//                 const mainStationMarker = L.marker(station.location, { icon: mainStationIcon }).addTo(map).bindPopup(`<b>${station.name}</b>`); \r\n//                 mainStationMarkers.current.push(mainStationMarker); \r\n\r\n//                 // Sự kiện click trên marker của trạm chính\r\n//                 mainStationMarker.on('click', () => {\r\n//                     // Zoom vào vị trí của marker trạm chính\r\n//                     map.setView(station.location, 14.5);\r\n\r\n//                     // Xóa các marker của trạm con hiện tại\r\n//                     subStationMarkers.current.forEach(marker => map.removeLayer(marker));\r\n//                     subStationMarkers.current = [];\r\n\r\n//                     // Hiển thị vị trí của các node con với icon trạm con\r\n//                     station.children.forEach(child => {\r\n//                         const subStationMarker = L.marker(child, { icon: subStationIcon }).addTo(map); // Thêm marker cho node con với icon trạm con\r\n//                         subStationMarkers.current.push(subStationMarker); // Thêm marker của trạm con vào danh sách\r\n//                     });\r\n//                 });\r\n//             });\r\n\r\n//             // Sự kiện zoomend để xóa các marker của trạm con khi zoom < 7\r\n//             map.on('zoomend', function() {\r\n//                 const zoom = map.getZoom();\r\n//                 if (zoom > 9) {\r\n//                     subStationMarkers.current.forEach(marker => map.removeLayer(marker));\r\n//                     subStationMarkers.current = [];\r\n//                 }\r\n//             });\r\n//         }\r\n//     }, [mapContainer]);\r\n\r\n//     return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\r\n// }\r\n\r\n// export default Main;\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet'; \r\nimport 'leaflet/dist/leaflet.css'; \r\nimport mainStationIconUrl from '../assets/gateway_icon.png'; // Đường dẫn đến icon của trạm chính\r\nimport subStationIconUrl from '../assets/device_icon.png'; // Đường dẫn đến icon của trạm con\r\nimport axios from 'axios'; // Import thư viện Axios để gửi yêu cầu HTTP\r\n\r\nfunction Main() {\r\n    const mapContainer = useRef(null);\r\n    const mainStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm chính\r\n    const subStationMarkers = useRef([]); // Ref cho danh sách các markers của trạm con\r\n\r\n    useEffect(() => {\r\n        const map = L.map(mapContainer.current).setView([16.4637, 107.5909], 6);\r\n\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(map);\r\n\r\n        const mainStationIcon = L.icon({\r\n            iconUrl: mainStationIconUrl,\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [0, -41]\r\n        });\r\n\r\n        const subStationIcon = L.icon({\r\n            iconUrl: subStationIconUrl,\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [0, -41]\r\n        });\r\n\r\n        // Gửi yêu cầu HTTP GET để lấy dữ liệu từ API backend\r\n        axios.get('http://sanslab.ddns.net:5000/api/gateway/getallGateway')\r\n            .then(response => {\r\n                const { data } = response;\r\n                const gateways = data.data.gateways;\r\n\r\n                gateways.forEach(gateway => {\r\n                    const { location, children } = gateway;\r\n                    const mainStationMarker = L.marker([location[0].lat, location[0].lon], { icon: mainStationIcon }).addTo(map).bindPopup(`<b>${gateway.gateway_name}</b>`); \r\n                    mainStationMarkers.current.push(mainStationMarker); \r\n\r\n                    mainStationMarker.on('click', () => {\r\n                        map.setView([location[0].lat, location[0].lon], 14.5);\r\n                        subStationMarkers.current.forEach(marker => map.removeLayer(marker));\r\n                        subStationMarkers.current = [];\r\n\r\n                        children.forEach(child => {\r\n                            const subStationMarker = L.marker([child.lat, child.lon], { icon: subStationIcon }).addTo(map);\r\n                            subStationMarkers.current.push(subStationMarker);\r\n                        });\r\n                    });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n\r\n        map.on('zoomend', function() {\r\n            const zoom = map.getZoom();\r\n            if (zoom > 9) {\r\n                subStationMarkers.current.forEach(marker => map.removeLayer(marker));\r\n                subStationMarkers.current = [];\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return <div ref={mapContainer} id=\"map\" className=\"map-container\"></div>;\r\n}\r\n\r\nexport default Main;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}